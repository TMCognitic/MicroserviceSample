version: '3'

networks:
  deep-network:
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/16
          ip_range: 10.0.0.0/24
          gateway: 10.0.0.254
    internal: true
  middle-network:
    internal: true
  front-network:  
services:
  mssql:
      container_name: mssql-db
      hostname: mssql-db
      build:
        context: .
        dockerfile: MsSql/Dockerfile          
      ports: 
        - "1433:1433"
      volumes:
        - ./MsSqlConfig/backups:/backups
        - ./MsSqlConfig/data:/var/opt/mssql/data
        - ./MsSqlConfig/log:/var/opt/mssql/log
        - ./MsSqlConfig/secrets:/var/opt/mssql/secrets
      networks:
        deep-network:
          ipv4_address: 10.0.0.2    
  microservapi:
    container_name: api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 8080
    ports:
      - "8080:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    image: ${DOCKER_REGISTRY-}microservapi
    networks:
      - deep-network
      - middle-network
    build:
      context: .
      dockerfile: MicroServ.Api/Dockerfile
      args:
        - MSSQL_IP=10.0.0.2
  microservweb:
    container_name: web
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 8080
    ports:
      - "80:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    image: ${DOCKER_REGISTRY-}microservweb
    networks:
      - middle-network
      - front-network
    build:
      context: .
      dockerfile: MicroServ.Web/Dockerfile
      args:
        APIBASEURI: 'http://microservapi:8080/api/'
  